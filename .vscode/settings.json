{
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "svipas.prettier-plus"
  },
  "css.format.spaceAroundSelectorSeparator": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.tabSize": 1,
  "eslint.format.enable": true,
  "eslint.ignoreUntitled": true,
  "eslint.lintTask.enable": true,
  "explorer.confirmDelete": false,
  "git.autofetch": true,
  "git.confirmSync": false,
  "html.format.indentHandlebars": true,
  "html.format.indentInnerHtml": true,
  "javascript.format.insertSpaceAfterConstructor": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
  "javascript.format.placeOpenBraceOnNewLineForControlBlocks": true,
  "javascript.format.placeOpenBraceOnNewLineForFunctions": true,
  "javascript.inlayHints.enumMemberValues.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "javascript.inlayHints.parameterTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "javascript.preferGoToSourceDefinition": true,
  "javascript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "javascript.suggest.completeFunctionCalls": true,
  "js/ts.implicitProjectConfig.checkJs": true,
  "js/ts.implicitProjectConfig.experimentalDecorators": false,
  "json.format.keepLines": true,
  "npm.enableRunFromFolder": true,
  "prettier.bracketSameLine": true,
  "prettier.endOfLine": "auto",
  "prettier.htmlWhitespaceSensitivity": "strict",
  "prettier.insertPragma": true,
  "prettier.jsxSingleQuote": true,
  "prettier.prettierPath": " ./node_modules/prettier",
  "prettier.requireConfig": true,
  "prettier.semi": false,
  "prettier.singleAttributePerLine": true,
  "prettier.useTabs": true,
  "prettier.vueIndentScriptAndStyle": true,
  "reactSnippets.settings.prettierEnabled": true,
  "typescript.disableAutomaticTypeAcquisition": false,
  "typescript.experimental.aiCodeActions": {
    "addNameToNamelessParameter": true,
    "classDoesntImplementInheritedAbstractMember": true,
    "classIncorrectlyImplementsInterface": true,
    "extractConstant": true,
    "extractFunction": true,
    "extractInterface": true,
    "extractType": true,
    "inferAndAddTypes": true,
    "missingFunctionDeclaration": true
  },
  "typescript.format.insertSpaceAfterConstructor": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "typescript.format.insertSpaceAfterTypeAssertion": true,
  "typescript.format.insertSpaceBeforeFunctionParenthesis": true,
  "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
  "typescript.format.placeOpenBraceOnNewLineForFunctions": true,
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.parameterTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "typescript.suggest.completeFunctionCalls": true,
  "workbench.colorTheme": "Default Dark Modern",
  "workbench.startupEditor": "none",
  "emmet.includeLanguages": {
    "javascript": "html"
  },
  "editor.codeActionsOnSave": {
    "source.removeUnusedImports": "explicit"
  },
  "[json]": {
    "editor.defaultFormatter": "svipas.prettier-plus"
  },
  "[typescript]": {
    "editor.defaultFormatter": "svipas.prettier-plus"
  }
}
